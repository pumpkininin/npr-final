package client;/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import com.formdev.flatlaf.intellijthemes.FlatArcOrangeIJTheme;
import data.Message;
import server.ServerGUI;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.*;

/**
 *
 * @author nkhieu
 */
public class ChatGUI extends javax.swing.JFrame{
    private ClientCore clientCore;
    DefaultListModel<String> model = new DefaultListModel<>();
    HashMap<String, ChatPanel> listPanel = new HashMap<>();
    JPanel chatContentPanel = new JPanel();
    JPanel userInfoPanel = new JPanel();
    JLabel userInfoLbl = new JLabel();
    CardLayout cardLayout;

    /**
     * Creates new form ChatGUI
     */
    public ChatGUI(ClientCore clientCore, List<String> activeList) {
        this.clientCore = clientCore;
        initComponents();
        FlatArcOrangeIJTheme.setup();
        activeUserList.setModel(model);
        activeUserList.setCellRenderer(new ListRender());
        cardLayout = (CardLayout) chatPanel.getLayout();
        model.addElement("ALL");
        ChatPanel newPanel = new ChatPanel("ALL", this.clientCore);
        listPanel.put("ALL", newPanel);
        chatPanel.add("ALL", newPanel);
        activeUserList.getSelectionModel().addListSelectionListener(e ->  {
                String activeUser = activeUserList.getSelectedValue();
                userInfoLbl.setText(activeUser);
                userInfoLbl.setFont(new Font("Verdana", Font.PLAIN, 25));
                infoPanel.add(userInfoLbl);
                cardLayout.show(chatPanel, activeUser);
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        activePanel = new javax.swing.JPanel();
        activeInfoPanel = new javax.swing.JPanel();
        countLbl = new javax.swing.JLabel();
        activeUsersLbl = new javax.swing.JLabel();
        activeScroll = new javax.swing.JScrollPane();
        activeUserList = new javax.swing.JList<>();
        infoPanel = new javax.swing.JPanel();
        chatPanel = new javax.swing.JPanel();
        logoutBtn = new javax.swing.JButton();
        setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                try {
                    int x = JOptionPane.showConfirmDialog(null,
                            "Logout?",
                            "Login",JOptionPane.CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
                    if(x == 0){
                        clientCore.logout();
                        System.exit(1);
                    }
                } catch (IOException ex) {
                    ex.printStackTrace();
                }

            }
        });
        setPreferredSize(new java.awt.Dimension(1200, 650));
        setResizable(false);
        activeInfoPanel.setBackground(new java.awt.Color(255, 255, 255));

        countLbl.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        countLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        countLbl.setToolTipText("");

        activeUsersLbl.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        activeUsersLbl.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        activeUsersLbl.setText("Active Users");
        activeUsersLbl.setToolTipText("");

        javax.swing.GroupLayout activeInfoPanelLayout = new javax.swing.GroupLayout(activeInfoPanel);
        activeInfoPanel.setLayout(activeInfoPanelLayout);
        activeInfoPanelLayout.setHorizontalGroup(
                activeInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, activeInfoPanelLayout.createSequentialGroup()
                                .addContainerGap(156, Short.MAX_VALUE)
                                .addComponent(countLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                        .addGroup(activeInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(activeInfoPanelLayout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(activeUsersLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(113, Short.MAX_VALUE)))
        );
        activeInfoPanelLayout.setVerticalGroup(
                activeInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(activeInfoPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(countLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                                .addContainerGap())
                        .addGroup(activeInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(activeInfoPanelLayout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(activeUsersLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                                        .addContainerGap()))
        );

        activeScroll.setViewportView(activeUserList);

        javax.swing.GroupLayout activePanelLayout = new javax.swing.GroupLayout(activePanel);
        activePanel.setLayout(activePanelLayout);
        activePanelLayout.setHorizontalGroup(
                activePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(activePanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(activeScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                                .addContainerGap())
                        .addGroup(activePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(activePanelLayout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(activeInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addContainerGap()))
        );
        activePanelLayout.setVerticalGroup(
                activePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, activePanelLayout.createSequentialGroup()
                                .addContainerGap(90, Short.MAX_VALUE)
                                .addComponent(activeScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                        .addGroup(activePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(activePanelLayout.createSequentialGroup()
                                        .addComponent(activeInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 650, Short.MAX_VALUE)))
        );

        infoPanel.setLayout(new java.awt.CardLayout());

        chatPanel.setLayout(new java.awt.CardLayout());
        logoutBtn.setText("Logout");
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    logoutBtnActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(activePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(chatPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 713, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(infoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(logoutBtn)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(activePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(infoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(29, 29, 29)
                                                                .addComponent(logoutBtn)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(chatPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addContainerGap())))
        );

        pack();
    }// </editor-fold>

    private void logoutBtnActionPerformed(ActionEvent evt) throws IOException {

        int x = JOptionPane.showConfirmDialog(null,
                "Logout?",
                "Login",JOptionPane.CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if(x == 0){
            clientCore.logout();
            System.exit(1);
        }
    }

    public void updateList(List<String> active, String user) {
       if(model.contains(user)) {
           JOptionPane.showConfirmDialog(this,
                   user + "has been logout! The list of active user has been updated!Now you cannot chat with he/she, but all sent message still available for reading",
                   "Error", JOptionPane.CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
           ChatPanel removePanel = listPanel.get(user);
           removePanel.getSendBtn().setEnabled(false);
       }else if(active.contains(user)){
            model.addElement(user);
            ChatPanel newPanel = new ChatPanel(user, this.clientCore);
            JOptionPane.showConfirmDialog(this,
                    user +"has been login! Now you can chat with he/she by click on corresponding name in list",
                    "Login",JOptionPane.CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
            listPanel.put(user, newPanel);
            chatPanel.add(user, newPanel);
        }

    }
    public void initList(List<String> active) {
        JOptionPane.showConfirmDialog(this,
                "Welcome!",
                "Welcome",JOptionPane.CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        for(String user: active){
            model.addElement(user);
            ChatPanel newPanel = new ChatPanel(user, this.clientCore);
            listPanel.put(user, newPanel);
            chatPanel.add(user, newPanel);
            }
    }
    public void updateMsg(Message message) {
        if(message.getMessageType() == Message.MessageType.FILE){

        }else{

        }
        String sender = message.getSender();
        if(message.getReceiverType() == Message.ReceiverType.GROUP){
            ChatPanel allPanel = listPanel.get("ALL");
            allPanel.appendNewMsg(message, sender);
            return;
        }
        ChatPanel senderPanel = listPanel.get(sender);
        senderPanel.appendNewMsg(message, "");

    }


    // Variables declaration - do not modify
    private javax.swing.JPanel activeInfoPanel;
    private javax.swing.JPanel activePanel;
    private javax.swing.JScrollPane activeScroll;
    private javax.swing.JList<String> activeUserList;
    private javax.swing.JLabel activeUsersLbl;
    private javax.swing.JPanel chatPanel;
    private javax.swing.JLabel countLbl;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JScrollPane msgJSP;
    private javax.swing.JButton logoutBtn;




    // End of variables declaration
}


